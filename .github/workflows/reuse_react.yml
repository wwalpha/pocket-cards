name: COM) React Build

on:
  workflow_call:
    # inputs
    inputs:
      environment:
        required: true
        type: string
      region:
        required: true
        type: string
      working-directory:
        required: true
        type: string
      module:
        required: true
        type: string
      deploy:
        required: false
        type: boolean
    # secrets
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      TF_API_TOKEN:
        required: true

jobs:
  REACT_BUILD:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      AWS_DEFAULT_REGION: ${{ inputs.region }}
      SSM_PARAMETER_NAME: ${{ format('{0}/{1}', '/pkc/frontend', inputs.module) }}
      TF_WORKSPACE: ${{ inputs.environment }}
      NODE_ENV: production
    defaults:
      run:
        working-directory: ${{ format('{0}/{1}', inputs.working-directory, inputs.module) }}
    outputs:
      image: ${{ steps.build-image.outputs.image }}

    steps:
      # source checkout
      - name: Checkout
        uses: actions/checkout@v3

      # Setup Node.js
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x

      # Install the latest version of Terraform CLI 
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.5
          terraform_wrapper: false

      # AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      # Get terraform outputs
      - name: Get terraform outputs
        id: terraform
        run: |
          cd configs/terraform
          terraform init
          BUCKET_NAME_ARCHIVE=$(terraform output -raw bucket_name_archive)
          echo "bucket_name_archive=$BUCKET_NAME_ARCHIVE" >> $GITHUB_OUTPUT
          echo "source_tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      # Pre Install
      - name: PreInstall
        run: |
          cd ..
          yarn install

      # Install and Build
      - name: Build
        env:
          BUCKET_NAME_ARCHIVE: ${{ steps.terraform.outputs.bucket_name_archive }}
          VERSION: ${{ steps.terraform.outputs.source_tag }}
        run: |
          aws s3 cp s3://$BUCKET_NAME_ARCHIVE/envs/react.env .
          echo VERSION=$(echo $VERSION) >> react.env
          yarn install --production=false
          yarn build

      # Deploy frontend
      - name: Deploy
        if: ${{ inputs.deploy == true }}
        env:
          # BUCKET_NAME: ${{ fromJson(steps.terraform.outputs.json).bucket_name_frontend }}
          BUCKET_FOLDER: ${{ inputs.module }}
        run: |
          aws s3 cp dist s3://$BUCKET_NAME/$BUCKET_FOLDER --recursive --region $AWS_DEFAULT_REGION
