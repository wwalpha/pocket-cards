name: PUSH_B) Auth Manager Build

on:
  push:
    paths:
      - backend/nodejs/auth_manager/**
      - backend/nodejs/typings/**
      - .github/workflows/push_backend_auth.yml
    branches-ignore:
      - releases/**

env:
  AWS_DEFAULT_REGION: ap-northeast-1
  ECR_REPOSITORY: pkc/auth2
  SSM_PARAMETER_NAME: /pkc/repository_url
  WORKING_DIR: backend/nodejs/auth_manager

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: dev
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      # source checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Setup Node.js
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x

      # Install and Build
      - name: Build
        run: |
          yarn install
          yarn build

      # AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      # Unit Test
      - name: Unit Test
        run: |
          docker-compose up -d --build
          sleep 10
          yarn test
          docker-compose down

      # ECR Login
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # docker build and push
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      # Update Repository URL
      - name: Update ecs repository url
        run: |
          aws ssm put-parameter --name $SSM_PARAMETER_NAME/auth --type "String" --value ${{ steps.build-image.outputs.image }} --overwrite
