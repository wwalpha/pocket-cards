name: ECS Workflow

on:
  workflow_call:
    # inputs
    inputs:
      environment:
        required: true
        type: string
      region:
        required: true
        type: string
      working-directory:
        required: true
        type: string
      ECR_REPOSITORY:
        required: true
        type: string
      ECS_SERVICE_NAME:
        required: true
        type: string
    # outputs
    outputs:
      image:
        value: ${{ jobs.ECS_BUILD.outputs.image }}
    # secrets
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  ECS_BUILD:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      AWS_DEFAULT_REGION: ${{ inputs.region }}
      ECR_REPOSITORY: ${{ inputs.ECR_REPOSITORY }}
      ECS_SERVICE_NAME: ${{ inputs.ECS_SERVICE_NAME }}
      SSM_PARAMETER_NAME: /pkc/repository_url
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    outputs:
      image: ${{ steps.build-image.outputs.image }}

    steps:
      # source checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Setup Node.js
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x

      # Install and Build
      - name: Build
        run: |
          yarn install
          yarn build

      # AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          mask-aws-account-id: 'no'

      # Unit Test
      # - name: Unit Test
      #   run: |
      #     docker-compose up -d --build
      #     sleep 10
      #     yarn test
      #     docker-compose down

      # ECR Login
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # docker build and push
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      # Update Repository URL
      - name: Update ecs repository url
        run: |
          aws ssm put-parameter --name $SSM_PARAMETER_NAME/$ECS_SERVICE_NAME --type "String" --value ${{ steps.build-image.outputs.image }} --overwrite
