name: PUSH_B) Lambda Build

on:
  push:
    paths:
      - backend/nodejs/lambda/**
    branches-ignore:
      - releases/**

env:
  AWS_DEFAULT_REGION: ap-northeast-1
  WORKING_DIR: backend/nodejs/lambda
  S3_BUCKET: pkc-archive-376965
  TF_WORKSPACE: dev
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}

jobs:
  Cognito:
    runs-on: ubuntu-latest
    environment:
      name: dev
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      # source checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Setup Node.js
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x

      # AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      # Install and Build
      - name: Build
        run: |
          cd cognito
          yarn install
          yarn build
          aws s3 cp dist.zip s3://$S3_BUCKET/lambda/cognito.zip

  Start:
    runs-on: ubuntu-latest
    environment:
      name: dev
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      # source checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Setup Node.js
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x

      # AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      # Install and Build
      - name: Build
        run: |
          cd start
          yarn install
          yarn build
          aws s3 cp dist.zip s3://$S3_BUCKET/lambda/start.zip

  Stop:
    runs-on: ubuntu-latest
    environment:
      name: dev
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      # source checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Setup Node.js
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x

      # AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      # Install and Build
      - name: Build
        run: |
          cd stop
          yarn install
          yarn build
          aws s3 cp dist.zip s3://$S3_BUCKET/lambda/stop.zip

  Status:
    runs-on: ubuntu-latest
    environment:
      name: dev
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      # source checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Setup Node.js
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x

      # AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      # Install and Build
      - name: Build
        run: |
          cd status
          yarn install
          yarn build
          aws s3 cp dist.zip s3://$S3_BUCKET/lambda/status.zip

  Authorizer:
    runs-on: ubuntu-latest
    environment:
      name: dev
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      # source checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Setup Node.js
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x

      # AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      # Install and Build
      - name: Build
        run: |
          cd authorizer
          yarn install
          yarn build
          aws s3 cp dist.zip s3://$S3_BUCKET/lambda/authorizer.zip
