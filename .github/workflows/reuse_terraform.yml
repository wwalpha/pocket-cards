name: Terraform Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      region:
        required: true
        type: string
      working-directory:
        required: true
        type: string
      vpc_id:
        required: false
        type: string
      vpc_subnets:
        required: false
        type: string

    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      TF_API_TOKEN:
        required: true
      translation_api_url:
        required: false
      translation_api_key:
        required: false
      ipa_api_url:
        required: false
      ipa_api_key:
        required: false
      vision_api_url:
        required: false
      vision_api_key:
        required: false
      domain_name:
        required: false
      google_client_id:
        required: false
      google_client_secret:
        required: false
      admin_email:
        required: false

jobs:
  Apply:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      AWS_DEFAULT_REGION: ${{ inputs.region }}
      TF_WORKSPACE: ${{ inputs.environment }}
      TF_VAR_translation_api_url:  ${{ secrets.translation_api_url }}
      TF_VAR_translation_api_key:  ${{ secrets.translation_api_key }}
      TF_VAR_ipa_api_url:  ${{ secrets.ipa_api_url }}
      TF_VAR_ipa_api_key:  ${{ secrets.ipa_api_key }}
      TF_VAR_vision_api_url:  ${{ secrets.vision_api_url }}
      TF_VAR_vision_api_key:  ${{ secrets.vision_api_key }}
      TF_VAR_domain_name: ${{ secrets.domain_name }}
      TF_VAR_google_client_id:  ${{ secrets.google_client_id }}
      TF_VAR_google_client_secret:  ${{ secrets.google_client_secret }}
      TF_VAR_admin_email: ${{ secrets.ADMIN_EMAIL }}
      TF_VAR_vpc_id: ${{ secrets.vpc_id }}
      TF_VAR_subnets: ${{ secrets.vpc_subnets }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
      # source checkout
      - name: Checkout
        uses: actions/checkout@v2

      - name: test
        run: printenv

      # AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      # Install the latest version of Terraform CLI 
      # and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # Terraform execution
      - name: Terraform Execution
        run: |
          rm -rf local.auto.tfvars
          terraform init
          terraform plan -out=terraform
          terraform apply "terraform"

